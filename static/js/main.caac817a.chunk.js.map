{"version":3,"sources":["components/Card.js","components/CardList.js","components/SearchBox.js","components/Scroll.js","components/ErrorBoundry.js","containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","src","alt","CardList","cardArr","robots","map","robot","SearchBox","searchChange","type","onChange","placeholder","Scroll","props","style","overflowY","border","height","children","ErrorBoundry","state","hasError","error","info","this","setState","Component","App","onSearchChange","event","searchfield","target","value","a","fetch","then","response","json","users","filteredBot","filter","bot","toLowerCase","includes","length","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"gQAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAG,+BAA0BJ,EAA1B,YAAwCK,IAAI,SACpD,gCACI,6BAAKJ,IACL,4BAAIC,WCMLI,EAXE,SAAC,GAAc,IACtBC,EADqB,EAAZC,OACQC,KAAI,SAAAC,GACvB,OAAO,cAAC,EAAD,CAAqBV,GAAIU,EAAMV,GAAIC,KAAMS,EAAMT,KAAMC,MAAOQ,EAAMR,OAAvDQ,EAAMV,OAE5B,OACI,8BACKO,KCCEI,EARG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKT,UAAU,MAAf,SACI,uBAAOU,KAAK,SAASC,SAAUF,EAAcX,KAAK,SAASE,UAAU,mCAAmCH,GAAG,SAASe,YAAY,oBCG7HC,EARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAACC,UAAU,SAAUC,OAAQ,oBAAqBC,OAAQ,SAAtE,SACKJ,EAAMK,YCmBJC,G,YApBf,kDACI,aAAe,IAAD,8BACV,gBACKC,MAAQ,CACTC,UAAU,GAHJ,EADlB,qDAQI,SAAkBC,EAAOC,GACrBC,KAAKC,SAAS,CAACJ,UAAU,MATjC,oBAYI,WACI,OAAIG,KAAKJ,MAAMC,SACJ,yEAEJG,KAAKX,MAAMK,aAhB1B,GAAkCQ,cCkDnBC,E,kDAzCX,aAAe,IAAD,8BACV,gBAcJC,eAAiB,SAACC,GACd,EAAKJ,SAAS,CAAEK,YAAaD,EAAME,OAAOC,SAd1C,EAAKZ,MAAQ,CACThB,OAAQ,GACR0B,YAAa,IAJP,E,4FAQd,iCAAAG,EAAA,sEACUC,MAAM,8CACPC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKb,SAAS,CAAErB,OAAQkC,OAH/C,2C,0EAWA,WAAU,IAAD,EAC2Bd,KAAKJ,MAA7BhB,EADH,EACGA,OAAQ0B,EADX,EACWA,YACVS,EAAcnC,EAAOoC,QAAO,SAAAC,GAC9B,OAAOA,EAAI5C,KAAK6C,cAAcC,SAASb,EAAYY,kBAEvD,OAAQtC,EAAOwC,OACX,sBAAK7C,UAAU,KAAf,UACI,oBAAIA,UAAU,KAAd,wBAEA,cAAC,EAAD,CAAWS,aAAcgB,KAAKI,iBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,UACI,cAAC,EAAD,CAAUxB,OAAQmC,WAPV,oBAAIxC,UAAU,QAAd,yB,GAzBd2B,aCEHmB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.caac817a.chunk.js","sourcesContent":["// import React from 'react'\r\n\r\nconst Card = ({ id, name, email }) => {\r\n    return (\r\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\r\n            <img src={`https://robohash.org/${id}?200x200`} alt=\"bots\" />\r\n            <div>\r\n                <h2>{name}</h2>\r\n                <p>{email}</p>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Card\r\n","import Card from './Card';\r\n\r\n\r\nconst CardList = ({robots}) => {\r\n    const cardArr = robots.map(robot => {\r\n        return <Card key={robot.id} id={robot.id} name={robot.name} email={robot.email} />\r\n    })\r\n    return (\r\n        <div>\r\n            {cardArr}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CardList\r\n\r\n\r\n\r\n","import React from 'react'\r\n// import { robots } from '../bot'\r\nconst SearchBox = ({searchChange}) => {\r\n    return (\r\n        <div className=\"pa2\">\r\n            <input type=\"search\" onChange={searchChange} name=\"search\" className=\"pa3 ba b--green bg-lightest-blue\" id=\"search\" placeholder=\"search robot\" />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchBox\r\n","const Scroll = (props) => {\r\n    return (\r\n        <div style={{overflowY:'scroll', border: '0.5px solid black', height: '100vh'}}>\r\n            {props.children}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Scroll\r\n","import React, { Component } from 'react'\r\n\r\nexport class ErrorBoundry extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            hasError: false\r\n        }\r\n    }\r\n\r\n    componentDidCatch(error, info) {\r\n        this.setState({hasError: true})\r\n    }\r\n\r\n    render() {\r\n        if (this.state.hasError) {\r\n            return <h1>Ooopsss !! Something went wrong mate ;)</h1>\r\n        }\r\n        return this.props.children\r\n    }\r\n}\r\n\r\nexport default ErrorBoundry\r\n","import React, { Component } from 'react';\r\nimport CardList from '../components/CardList'\r\nimport SearchBox from '../components/SearchBox'\r\nimport Scroll from '../components/Scroll'\r\nimport '../containers/App.css'\r\n// eslint-disable-next-line\r\nimport tachyons from 'tachyons'\r\nimport ErrorBoundry from '../components/ErrorBoundry'\r\n\r\n\r\nclass App extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            robots: [],\r\n            searchfield: ''\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        await fetch('https://jsonplaceholder.typicode.com/users')\r\n            .then(response => response.json())\r\n            .then(users => this.setState({ robots: users }))\r\n\r\n    }\r\n\r\n    onSearchChange = (event) => {\r\n        this.setState({ searchfield: event.target.value })\r\n    }\r\n\r\n    render() {\r\n        const { robots, searchfield } = this.state\r\n        const filteredBot = robots.filter(bot => {\r\n            return bot.name.toLowerCase().includes(searchfield.toLowerCase())\r\n        })\r\n        return !robots.length ? <h1 className=\"f1 tc\">Loading</h1> : (\r\n            <div className=\"tc\">\r\n                <h1 className=\"f1\">BOTNETWORK</h1>\r\n\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <Scroll>\r\n                    <ErrorBoundry>\r\n                        <CardList robots={filteredBot} />\r\n                    </ErrorBoundry>\r\n                </Scroll>\r\n\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}